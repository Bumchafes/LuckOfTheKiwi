version: '3'
# Services = Docker Containers which will run.
services: 

#  audit:
 #  build: ./audit/
    
#  buyticket:
#    build: ./buyticket/
#    # Copy files from ./src into /usr/src/myapp in the Container.
#    volumes:
 #    - ./src:/usr/src/myapp
  
 # createlottery:
#    build: ./createlottery/
    # Ports that are open NetworkPort:ContainerPort
#   ports:
 #    - 5017:80
  
 # findlottery:
  #  build: ./findlottery/
  
 # maintenance:
 #   build: ./maintenance/
 #   # Ports that are open NetworkPort:ContainerPort
 #   ports:
 #   - 5019:80
  
#  pubkey:
#    build: ./pubKey/
#    # Ports that are open NetworkPort:ContainerPort
#    ports:
 #    - 5020:80
  
#  pvtkey:
 #   build: ./pvtkey/
  #  # Ports that are open NetworkPort:ContainerPort
 #   ports:
 #    - 5021:80
  
 # readbc:
 #   build: ./readbc/
  
 # userinterface:
  #  build: ./userinterface/
  
#  winningticket:
#    build: ./winningticket/
    # Ports that are open NetworkPort:ContainerPort
 #   ports:
#     - 5024:80
  api:
    container_name: api
    build: ./API/
    # Ports that are open NetworkPort:ContainerPort
    ports:
     - '5006:3000'

  socketserver:
    container_name: socketserver
    build: ./socketserver/
    # Ports that are open NetworkPort:ContainerPort
    ports:
     - '3000:3000'
     
  blockchain:
    container_name: blockchain
    build: ./blockchain/
    # Ports that are open NetworkPort:ContainerPort
    ports:
     - '3001:3001'
  
  lottery:
    container_name: lottery
    build: ./lottery/
    # Ports that are open NetworkPort:ContainerPort
    ports:
     - '3002:3002'
    depends_on:
     - socketserver

  userinterface:
    container_name: userinterface
    build: ./userinterface/
    # Ports that are open NetworkPort:ContainerPort
    ports:
     - 3003:3003



#  writebc:
#    build: ./writebc/
  
